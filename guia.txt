üìå Pasos para configurar el proyecto

1Ô∏è‚É£ Configuraci√≥n del entorno backend (Django)
Crear un entorno virtual (recomendado para aislar las dependencias del proyecto):

bash:
python -m venv venv


Activar el entorno virtual:

En Windows (CMD o PowerShell):
bash

venv\Scripts\activate
En macOS/Linux:
bash
source venv/bin/activate


Instalar las dependencias necesarias de Django y DRF:

Crear la base de datos y las tablas en PostgreSQL antes de ejecutar las migraciones:

Abrir pgAdmin o conectarse a PostgreSQL mediante la terminal.
Ejecutar el archivo SQL presente en el proyecto para crear la base de datos y las tablas necesarias.
Verificar que la conexi√≥n est√© configurada en settings.py:

python
Copiar c√≥digo
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'nombre_de_tu_base_de_datos',
        'USER': 'tu_usuario',
        'PASSWORD': 'tu_contrase√±a',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}
Ejecutar las migraciones del modelo:

bash:

python manage.py makemigrations
python manage.py migrate

Ejecutar el servidor de desarrollo:

bash:
python manage.py runserver

2Ô∏è‚É£ Documentaci√≥n de la API
La documentaci√≥n de la API est√° disponible en:
üìå http://127.0.0.1:8000/docs/
Aqu√≠ se pueden visualizar y probar los endpoints de la API.

3Ô∏è‚É£ Configuraci√≥n del frontend (React)
Instalar las dependencias con npm (dentro de la carpeta del frontend):
bash
npm install
Ejecutar el frontend en modo desarrollo:
bash

npm run dev
‚úÖ Con estos pasos, el backend y el frontend estar√°n corriendo correctamente.